{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static gameStatus = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.initialState = initialState;\n        this.score = 0;\n        this.gameStatus = $a5fd07fa01589658$var$Game.gameStatus.idle;\n        this.state = initialState.map((row)=>[\n                ...row\n            ]);\n    }\n    isStateChanged(originalState) {\n        if (this.hasStateChanged(originalState, this.state)) {\n            this.addRandomTile();\n            this.updateStatusOfTheGame(this.state);\n        }\n    }\n    addRandomTile() {\n        const emptyCells = [];\n        for(let row = 0; row < 4; row++){\n            for(let col = 0; col < 4; col++)if (this.state[row][col] === 0) emptyCells.push([\n                row,\n                col\n            ]);\n        }\n        if (emptyCells.length > 0) {\n            const [row, col] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n            this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    slideAndMerge(row) {\n        const cellsWithValues = row.filter((value)=>value !== 0);\n        const mergedRow = [];\n        for(let i = 0; i < cellsWithValues.length; i++)if (cellsWithValues[i] === cellsWithValues[i + 1]) {\n            mergedRow.push(cellsWithValues[i] * 2);\n            this.score += cellsWithValues[i] * 2;\n            i++;\n        } else mergedRow.push(cellsWithValues[i]);\n        return mergedRow.concat(Array(4 - mergedRow.length).fill(0));\n    }\n    hasStateChanged(originalState, newState) {\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            if (originalState[row][col] !== newState[row][col]) return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (this.gameStatus !== $a5fd07fa01589658$var$Game.gameStatus.playing) return;\n        const originalState = this.state.map((row)=>[\n                ...row\n            ]);\n        for(let col = 0; col < 4; col++){\n            const column = this.state.map((row)=>row[col]);\n            const newColumn = this.slideAndMerge(column);\n            for(let row = 0; row < 4; row++)this.state[row][col] = newColumn[row];\n        }\n        this.isStateChanged(originalState);\n    }\n    moveDown() {\n        if (this.gameStatus !== $a5fd07fa01589658$var$Game.gameStatus.playing) return;\n        const originalState = this.state.map((row)=>[\n                ...row\n            ]);\n        for(let col = 0; col < 4; col++){\n            const column = this.state.map((row)=>row[col]).reverse();\n            const newColumn = this.slideAndMerge(column).reverse();\n            for(let row = 0; row < 4; row++)this.state[row][col] = newColumn[row];\n        }\n        this.isStateChanged(originalState);\n    }\n    moveLeft() {\n        if (this.gameStatus !== $a5fd07fa01589658$var$Game.gameStatus.playing) return;\n        const originalState = this.state.map((row)=>[\n                ...row\n            ]);\n        for(let row = 0; row < 4; row++)this.state[row] = this.slideAndMerge(this.state[row]);\n        this.isStateChanged(originalState);\n    }\n    moveRight() {\n        if (this.gameStatus !== $a5fd07fa01589658$var$Game.gameStatus.playing) return;\n        const originalState = this.state.map((row)=>[\n                ...row\n            ]);\n        for(let row = 0; row < 4; row++)this.state[row] = this.slideAndMerge(this.state[row].reverse()).reverse();\n        this.isStateChanged(originalState);\n    }\n    updateStatusOfTheGame(state) {\n        let has2048 = false;\n        state.forEach((row)=>{\n            row.forEach((cell)=>{\n                if (cell === 2048) has2048 = true;\n            });\n        });\n        if (has2048) this.gameStatus = $a5fd07fa01589658$var$Game.gameStatus.win;\n        else if (!this.canMove()) this.gameStatus = $a5fd07fa01589658$var$Game.gameStatus.lose;\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.gameStatus;\n    }\n    start() {\n        if (this.gameStatus === $a5fd07fa01589658$var$Game.gameStatus.idle) {\n            this.gameStatus = $a5fd07fa01589658$var$Game.gameStatus.playing;\n            this.addRandomTile();\n            this.addRandomTile();\n        }\n    }\n    restart() {\n        this.score = 0;\n        this.gameStatus = $a5fd07fa01589658$var$Game.gameStatus.idle;\n        this.state = this.initialState.map((row)=>[\n                ...row\n            ]);\n    }\n    canMove() {\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            const currentCell = this.state[row][col];\n            if (this.state[row][col] === 0) return true;\n            if (col < 3 && currentCell === this.state[row][col + 1]) return true;\n            if (row < 3 && currentCell === this.state[row + 1][col]) return true;\n        }\n        return false;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nfunction $09e991522ca7e64e$var$updateCellField() {\n    const field = $09e991522ca7e64e$var$game.getState();\n    const fieldRows = document.querySelectorAll(\".field-row\");\n    fieldRows.forEach((row, rowIndex)=>{\n        const cells = row.querySelectorAll(\".field-cell\");\n        cells.forEach((cell, cellIndex)=>{\n            const value = field[rowIndex][cellIndex];\n            cell.setAttribute(\"class\", \"field-cell\");\n            cell.textContent = \"\";\n            if (value !== 0) {\n                cell.classList.add(`field-cell--${value}`);\n                cell.textContent = value;\n            }\n        });\n    });\n    $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$updateMessageText();\n}\nfunction $09e991522ca7e64e$var$handleStart() {\n    $09e991522ca7e64e$var$setupInput();\n    if ($09e991522ca7e64e$var$game.gameStatus === $a5fd07fa01589658$exports.gameStatus.idle) {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n        $09e991522ca7e64e$var$startButton.classList.replace(\"start\", \"restart\");\n    } else {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$startButton.textContent = \"Start\";\n        $09e991522ca7e64e$var$startButton.classList.replace(\"restart\", \"start\");\n    }\n    $09e991522ca7e64e$var$updateCellField();\n}\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", $09e991522ca7e64e$var$handleStart);\nfunction $09e991522ca7e64e$var$setupInput() {\n    window.addEventListener(\"keydown\", $09e991522ca7e64e$var$handleInput, {\n        once: true\n    });\n}\nfunction $09e991522ca7e64e$var$handleInput(e) {\n    if ($09e991522ca7e64e$var$game.getStatus() !== $a5fd07fa01589658$exports.gameStatus.playing) return;\n    switch(e.key){\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n    }\n    $09e991522ca7e64e$var$setupInput();\n    $09e991522ca7e64e$var$updateCellField();\n    $09e991522ca7e64e$var$updateMessageText();\n}\nfunction $09e991522ca7e64e$var$updateMessageText() {\n    $09e991522ca7e64e$var$messageLose.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$messageWin.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$messageStart.classList.add(\"hidden\");\n    if ($09e991522ca7e64e$var$game.gameStatus === $a5fd07fa01589658$exports.gameStatus.win) $09e991522ca7e64e$var$messageWin.classList.remove(\"hidden\");\n    else if ($09e991522ca7e64e$var$game.gameStatus === $a5fd07fa01589658$exports.gameStatus.lose) $09e991522ca7e64e$var$messageLose.classList.remove(\"hidden\");\n}\n\n\n//# sourceMappingURL=index.69e3cdc4.js.map\n","'use strict';\n\nconst startButton = document.querySelector('.button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nfunction updateCellField() {\n  const field = game.getState();\n  const fieldRows = document.querySelectorAll('.field-row');\n\n  fieldRows.forEach((row, rowIndex) => {\n    const cells = row.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, cellIndex) => {\n      const value = field[rowIndex][cellIndex];\n\n      cell.setAttribute('class', 'field-cell');\n      cell.textContent = '';\n\n      if (value !== 0) {\n        cell.classList.add(`field-cell--${value}`);\n        cell.textContent = value;\n      }\n    });\n  });\n\n  gameScore.textContent = game.getScore();\n  updateMessageText();\n}\n\nfunction handleStart() {\n  setupInput();\n\n  if (game.gameStatus === Game.gameStatus.idle) {\n    game.start();\n    startButton.textContent = 'Restart';\n    startButton.classList.replace('start', 'restart');\n  } else {\n    game.restart();\n    startButton.textContent = 'Start';\n    startButton.classList.replace('restart', 'start');\n  }\n\n  updateCellField();\n}\n\nstartButton.addEventListener('click', handleStart);\n\nfunction setupInput() {\n  window.addEventListener('keydown', handleInput, { once: true });\n}\n\nfunction handleInput(e) {\n  if (game.getStatus() !== Game.gameStatus.playing) {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n  }\n\n  setupInput();\n  updateCellField();\n  updateMessageText();\n}\n\nfunction updateMessageText() {\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  if (game.gameStatus === Game.gameStatus.win) {\n    messageWin.classList.remove('hidden');\n  } else if (game.gameStatus === Game.gameStatus.lose) {\n    messageLose.classList.remove('hidden');\n  }\n}\n","'use strict';\n\nclass Game {\n  static gameStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.score = 0;\n    this.gameStatus = Game.gameStatus.idle;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  isStateChanged(originalState) {\n    if (this.hasStateChanged(originalState, this.state)) {\n      this.addRandomTile();\n      this.updateStatusOfTheGame(this.state);\n    }\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          emptyCells.push([row, col]);\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const [row, col] =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  slideAndMerge(row) {\n    const cellsWithValues = row.filter((value) => value !== 0);\n    const mergedRow = [];\n\n    for (let i = 0; i < cellsWithValues.length; i++) {\n      if (cellsWithValues[i] === cellsWithValues[i + 1]) {\n        mergedRow.push(cellsWithValues[i] * 2);\n        this.score += cellsWithValues[i] * 2;\n        i++;\n      } else {\n        mergedRow.push(cellsWithValues[i]);\n      }\n    }\n\n    return mergedRow.concat(Array(4 - mergedRow.length).fill(0));\n  }\n\n  hasStateChanged(originalState, newState) {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (originalState[row][col] !== newState[row][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  moveUp() {\n    if (this.gameStatus !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = this.state.map((row) => [...row]);\n\n    for (let col = 0; col < 4; col++) {\n      const column = this.state.map((row) => row[col]);\n      const newColumn = this.slideAndMerge(column);\n\n      for (let row = 0; row < 4; row++) {\n        this.state[row][col] = newColumn[row];\n      }\n    }\n\n    this.isStateChanged(originalState);\n  }\n\n  moveDown() {\n    if (this.gameStatus !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = this.state.map((row) => [...row]);\n\n    for (let col = 0; col < 4; col++) {\n      const column = this.state.map((row) => row[col]).reverse();\n      const newColumn = this.slideAndMerge(column).reverse();\n\n      for (let row = 0; row < 4; row++) {\n        this.state[row][col] = newColumn[row];\n      }\n    }\n\n    this.isStateChanged(originalState);\n  }\n\n  moveLeft() {\n    if (this.gameStatus !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = this.state.map((row) => [...row]);\n\n    for (let row = 0; row < 4; row++) {\n      this.state[row] = this.slideAndMerge(this.state[row]);\n    }\n\n    this.isStateChanged(originalState);\n  }\n\n  moveRight() {\n    if (this.gameStatus !== Game.gameStatus.playing) {\n      return;\n    }\n\n    const originalState = this.state.map((row) => [...row]);\n\n    for (let row = 0; row < 4; row++) {\n      this.state[row] = this.slideAndMerge(this.state[row].reverse()).reverse();\n    }\n\n    this.isStateChanged(originalState);\n  }\n\n  updateStatusOfTheGame(state) {\n    let has2048 = false;\n\n    state.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell === 2048) {\n          has2048 = true;\n        }\n      });\n    });\n\n    if (has2048) {\n      this.gameStatus = Game.gameStatus.win;\n    } else if (!this.canMove()) {\n      this.gameStatus = Game.gameStatus.lose;\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.gameStatus;\n  }\n\n  start() {\n    if (this.gameStatus === Game.gameStatus.idle) {\n      this.gameStatus = Game.gameStatus.playing;\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  restart() {\n    this.score = 0;\n    this.gameStatus = Game.gameStatus.idle;\n    this.state = this.initialState.map((row) => [...row]);\n  }\n\n  canMove() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const currentCell = this.state[row][col];\n\n        if (this.state[row][col] === 0) {\n          return true;\n        }\n\n        if (col < 3 && currentCell === this.state[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && currentCell === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$09e991522ca7e64e$var$startButton","document","querySelector","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$gameScore","$a5fd07fa01589658$exports","$a5fd07fa01589658$var$Game","gameStatus","idle","playing","win","lose","constructor","initialState","score","state","map","row","isStateChanged","originalState","hasStateChanged","addRandomTile","updateStatusOfTheGame","emptyCells","col","push","length","Math","floor","random","slideAndMerge","cellsWithValues","filter","value","mergedRow","i","concat","Array","fill","newState","moveUp","column","newColumn","moveDown","reverse","moveLeft","moveRight","has2048","forEach","cell","canMove","getScore","getState","getStatus","start","restart","currentCell","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$updateCellField","field","fieldRows","querySelectorAll","rowIndex","cells","cellIndex","setAttribute","textContent","classList","add","$09e991522ca7e64e$var$updateMessageText","$09e991522ca7e64e$var$setupInput","window","addEventListener","$09e991522ca7e64e$var$handleInput","once","e","key","remove","replace"],"version":3,"file":"index.69e3cdc4.js.map"}